# Arquivo: tests/test_configs/server_tls.test.toml
# Propósito: Configuração para testes onde o próprio Typedb-MCP-Server
# expõe seus endpoints MCP e HTTP sobre TLS (HTTPS/WSS).
# - Chaves em `camelCase`.
# - TLS do servidor MCP habilitado, usando certificados de teste.

[server]
# Endereço de bind INTERNO ao contêiner para o servidor MCP (HTTPS/WSS).
# A porta 8443 é comumente usada para HTTPS.
bindAddress = "0.0.0.0:8443"

# Endereço de métricas pode permanecer HTTP ou ser configurado para HTTPS separadamente.
# Para simplificar os testes, geralmente mantemos métricas em HTTP.
metricsBindAddress = "0.0.0.0:9090"

mcpWebsocketPath = "/mcp/ws"
metricsPath = "/metrics"

# Habilita TLS (HTTPS/WSS) para o servidor MCP.
tlsEnabled = true

# Caminho DENTRO do contêiner para o certificado do servidor MCP (fullchain).
# Este certificado é gerado por `scripts/generate-test-certs.sh` e montado via volume.
tlsCertPath = "/app/test_certs/mcp-server.crt"

# Caminho DENTRO do contêiner para a chave privada do servidor MCP.
tlsKeyPath = "/app/test_certs/mcp-server.key"

[typedb]
# Conecta-se à instância TypeDB padrão (sem TLS).
address = "typedb-server-it:1729"
username = "admin"
tlsEnabled = false # TLS para a conexão com TypeDB está desabilitado neste cenário.

[oauth]
# OAuth2 desabilitado para focar nos testes de TLS do servidor.
enabled = false

[logging]
# Nível de log máximo para capturar crash/pânico do servidor TLS
rustLog = "trace,typedb_mcp_server_lib=trace,typedb_mcp_server=trace,typedb_driver=trace,axum_server=trace,hyper=trace,h2=trace,tower=trace,rustls=trace,tokio_rustls=trace,tokio=debug"

[rateLimit]
enabled = true
requestsPerSecond = 1000
burstSize = 2000

[cors]
allowedOrigins = ["*"]

[tracing]
enabled = false
serviceName = "typedb-mcp-server-test-servertls"