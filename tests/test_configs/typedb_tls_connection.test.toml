# Arquivo: tests/test_configs/typedb_tls_connection.test.toml
# Propósito: Configuração para testes onde o Typedb-MCP-Server
# se conecta a uma instância do TypeDB que requer TLS.
# - Chaves em `camelCase`.
# - O servidor MCP em si opera em HTTP/WS (sem TLS).
# - A conexão do MCP Server para o TypeDB usa TLS, apontando para `typedb-server-tls-it`.

[server]
# Servidor MCP escuta em HTTP/WS.
bindAddress = "0.0.0.0:8787"
metricsBindAddress = "0.0.0.0:9090"
mcpWebsocketPath = "/mcp/ws"
metricsPath = "/metrics"
tlsEnabled = false # TLS do servidor MCP está desabilitado.

[typedb]
# Endereço do servidor TypeDB configurado com TLS (serviço `typedb-server-tls-it` no Docker).
address = "typedb-server-tls-it:1729"
username = "admin"

# Habilita TLS para a conexão DO SERVIDOR MCP PARA O TYPEDB.
tlsEnabled = true

# Caminho DENTRO do contêiner do servidor MCP para o certificado da CA raiz
# que assinou o certificado do `typedb-server-tls-it`.
# Este é o rootCA.pem gerado por `scripts/generate-test-certs.sh`.
tlsCaPath = "/app/test_certs/rootCA.pem"

[oauth]
# OAuth2 desabilitado para focar nos testes de conexão TLS com TypeDB.
enabled = false

[logging]
# Nível de log com trace para o `typedb_driver` para ajudar a depurar
# problemas de conexão TLS entre o servidor MCP e o TypeDB.
rustLog = "info,typedb_mcp_server_lib=debug,typedb_mcp_server=debug,typedb_driver=trace,hyper=warn,h2=warn,tower=warn"

[rateLimit]
enabled = true
requestsPerSecond = 1000
burstSize = 2000

[cors]
allowedOrigins = ["*"]

[tracing]
enabled = false
serviceName = "typedb-mcp-server-test-typedbtls"