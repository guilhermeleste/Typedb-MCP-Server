# docker-compose.test.yml
#
# Arquivo Docker Compose para o ambiente de teste de integração do Typedb-MCP-Server.
# Este arquivo orquestra o Typedb-MCP-Server e suas dependências (TypeDB, Mock OAuth2 Server)
# para permitir testes de integração automatizados.


services:
  # Serviço principal Typedb-MCP-Server para testes de integração.
  typedb-mcp-server-it:
    profiles: ["typedb_default", "typedb_tls", "oauth_mock", "vault_integration"]
    build:
      context: . 
      dockerfile: Dockerfile 
    container_name: ${COMPOSE_PROJECT_NAME}-mcp-server 
    ports:
      - "8788:8787"   # MCP HTTP/WS (Host:Container)
      - "8444:8443"   # MCP HTTPS/WSS (Host:Container) - Usado se server.tlsEnabled=true no TOML
      - "9091:9090"   # Métricas Prometheus (Host:Container)
    volumes:
      - ./tests/test_configs:/app/test_configs:ro
      - ./tests/test_certs:/app/test_certs:ro
    environment:
      - MCP_CONFIG_PATH=${MCP_CONFIG_PATH_FOR_TEST_CONTAINER_HOST_ENV:-/app/test_configs/default.test.toml}
      - VAULT_ADDR=http://vault-it:8200
      - MCP_TYPEDB__ADDRESS=${MCP_TYPEDB__ADDRESS:-typedb-server-it:1729}
      - RUST_LOG=${RUST_LOG_MCP:-trace,typedb_mcp_server=trace}
      - TLS_ENABLED=${TLS_ENABLED:-false}

    secrets:
      - source: mcp_approle_role_id
        target: /run/secrets/mcp_approle_role_id
        mode: 0400
      - source: mcp_approle_secret_id
        target: /run/secrets/mcp_approle_secret_id
        mode: 0400
    

    
    depends_on:
      typedb-server-it:
         condition: service_healthy
      vault-it:
         condition: service_healthy
    networks:
      - typedb_mcp_test_network

  # Instância do TypeDB Server para testes (sem TLS).
  typedb-server-it:
    profiles: ["typedb_default", "typedb_tls", "oauth_mock"]
    image: typedb/typedb:3.2.0
    container_name: ${COMPOSE_PROJECT_NAME}-typedb
    ports:
      - "1729:1729"
    environment:
      - TYPEDB_SERVER_OPTS=--server.address=0.0.0.0:1729 --server.authentication.enable=true --server.credential.default.password=${TYPEDB_PASSWORD_TEST}
    healthcheck:
      test: ["CMD-SHELL", "timeout 3 bash -c '</dev/tcp/localhost/1729' || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 30s 
    networks:
      - typedb_mcp_test_network
    volumes:
      - typedb_data_it:/opt/typedb/server/data

  # Instância do TypeDB Server para testes (COM TLS).
  typedb-server-tls-it:
    profiles: ["typedb_tls"]
    image: typedb/typedb:3.2.0
    container_name: ${COMPOSE_PROJECT_NAME}-typedb-tls
    ports:
      - "11730:1729"
    volumes:
      - ./tests/test_certs/typedb-server.crt:/opt/typedb/server/conf/typedb-server.crt:ro
      - ./tests/test_certs/typedb-server.key:/opt/typedb/server/conf/typedb-server.key:ro
      - ./tests/test_certs/rootCA.pem:/opt/typedb/server/conf/rootCA.pem:ro
      - typedb_tls_data_it:/opt/typedb/server/data
    environment:
      - TYPEDB_SERVER_OPTS=--server.address=0.0.0.0:1729 --server.authentication.enable=true --server.credential.default.password=${TYPEDB_PASSWORD_TEST} --server.encryption.enable=all --server.encryption.certificate.path=/opt/typedb/server/conf/typedb-server.crt --server.encryption.private_key.path=/opt/typedb/server/conf/typedb-server.key --server.encryption.ca.path=/opt/typedb/server/conf/rootCA.pem
    healthcheck:
      test: ["CMD-SHELL", "timeout 3 bash -c '</dev/tcp/localhost/1729' || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 35s 
    networks:
      - typedb_mcp_test_network


  # Vault Server para testes de integração (modo dev)
  vault-it:
    profiles: ["typedb_default", "typedb_tls", "oauth_mock", "vault_integration"]
    image: hashicorp/vault:latest
    container_name: ${COMPOSE_PROJECT_NAME}-vault
    ports:
      - "8200:8200"
    environment:
      - VAULT_DEV_ROOT_TOKEN_ID=my-root-token
      - VAULT_DEV_LISTEN_ADDRESS=0.0.0.0:8200
      - VAULT_ADDR=http://0.0.0.0:8200
    cap_add:
      - IPC_LOCK
    volumes:
      - ./scripts/setup-full-ecosystem-vault.sh:/vault/scripts/setup-full-ecosystem-vault.sh:ro
      - ./test-secrets:/vault/test-secrets
    command: >
      sh -c "
        vault server -dev -dev-root-token-id=my-root-token -dev-listen-address=0.0.0.0:8200 &
        VAULT_PID=$$!
        sleep 5
        export VAULT_ADDR=http://localhost:8200
        export VAULT_TOKEN=my-root-token
        sh /vault/scripts/setup-full-ecosystem-vault.sh
        wait $$VAULT_PID
      "
    healthcheck:
      test: ["CMD", "vault", "status"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - typedb_mcp_test_network

networks:
  typedb_mcp_test_network:
    driver: bridge
    name: ${COMPOSE_PROJECT_NAME}_typedb_mcp_test_network 

volumes:
  typedb_data_it: 
    name: ${COMPOSE_PROJECT_NAME}_typedb_data_it 
  typedb_tls_data_it:
    name: ${COMPOSE_PROJECT_NAME}_typedb_tls_data_it

secrets:
  mcp_approle_role_id:
    file: ./test-secrets/role_id.txt
  mcp_approle_secret_id:
    file: ./test-secrets/secret_id.txt
