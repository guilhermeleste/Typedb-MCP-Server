# .env.example
# Exemplo de arquivo de variáveis de ambiente para Typedb-MCP-Server.
# Copie este arquivo para .env e ajuste os valores conforme necessário para desenvolvimento local.
# Variáveis de ambiente definidas no sistema operacional terão precedência sobre este arquivo
# e sobre os valores definidos em config.toml (se o prefixo MCP_ for usado).

# --- Configuração Geral ---
# Caminho para o arquivo de configuração principal (default: config.toml na raiz do projeto)
# MCP_CONFIG_PATH=./config.dev.toml

# --- Configurações TypeDB ---
# Obrigatória se o TypeDB requer autenticação e não está no config.toml.
# Esta variável SEMPRE sobrescreve qualquer configuração de senha no config.toml (que não deve existir).
TYPEDB_PASSWORD=password

# Exemplo de como sobrescrever configurações do typedb via env var (prefixo MCP_ + nome da seção + __ + nome do campo):
# MCP_TYPEDB__ADDRESS=outro-host-typedb:1729
# MCP_TYPEDB__USERNAME=testuser
# MCP_TYPEDB__TLS_ENABLED=true
# MCP_TYPEDB__TLS_CA_PATH=/path/to/your/typedb_ca.pem

# --- Configurações do Servidor MCP ---
# MCP_SERVER__BIND_ADDRESS=0.0.0.0:8788
# MCP_SERVER__TLS_ENABLED=false
# MCP_SERVER__TLS_CERT_PATH=/path/to/your/mcp_server.crt
# MCP_SERVER__TLS_KEY_PATH=/path/to/your/mcp_server.key
# MCP_SERVER__METRICS_BIND_ADDRESS=0.0.0.0:9191

# --- Configurações OAuth ---
# MCP_OAUTH__ENABLED=false
# MCP_OAUTH__JWKS_URI=https://auth.example.com/.well-known/jwks.json
# MCP_OAUTH__ISSUER=https://auth.example.com
# MCP_OAUTH__AUDIENCE=mcp-api
# MCP_OAUTH__JWKS_REFRESH_INTERVAL="2h" # (precisa ser parseável por humantime_serde se usado no config.rs via env)
                                     # A crate `config` parseará "2h" como string,
                                     # a desserialização na struct com `humantime_serde` fará a conversão.
# MCP_OAUTH__REQUIRED_SCOPES="scope1,scope2" # Para listas, o config-rs pode precisar de um formato específico ou parsing customizado
                                          # A crate `config` pode parsear "val1,val2" em `Vec<String>` se `try_parsing(true)` estiver ativo
                                          # e o tipo na struct for `Vec<String>`.

# --- Configurações de Logging ---
# Esta variável é diretamente usada pelo tracing-subscriber se presente,
# caso contrário, o valor de config.toml (logging.rust_log) é usado para construir o EnvFilter.
# RUST_LOG="debug,typedb_mcp_server_lib=trace,typedb_mcp_server=trace,typedb_driver=warn"

# --- Configurações CORS ---
# MCP_CORS__ALLOWED_ORIGINS="http://localhost:1234,http://another.client.com"

# --- Configurações Rate Limit ---
# MCP_RATE_LIMIT__ENABLED=true
# MCP_RATE_LIMIT__REQUESTS_PER_IP_PER_SECOND=50
# MCP_RATE_LIMIT__BURST_PER_IP=100

# --- Configurações Tracing OpenTelemetry ---
# MCP_TRACING__ENABLED=false
# MCP_TRACING__EXPORTER_OTLP_ENDPOINT="http://localhost:4317"
# MCP_TRACING__SERVICE_NAME="my-mcp-server-instance"
# MCP_TRACING__SAMPLER="traceidratio"
# MCP_TRACING__SAMPLER_ARG="0.5"